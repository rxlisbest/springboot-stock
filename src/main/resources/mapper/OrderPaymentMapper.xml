<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruiruisun.stock.mapper.OrderPaymentMapper">

    <resultMap id="BaseResultMap" type="com.ruiruisun.stock.entity.OrderPayment">
        <result column="id" jdbcType="INTEGER" property="id" javaType="int"/>
        <result column="user_id" jdbcType="INTEGER" property="user_id" javaType="int"/>
        <result column="order_id" jdbcType="INTEGER" property="order_id" javaType="int"/>
        <result column="money" jdbcType="FLOAT" property="money" javaType="float"/>
        <result column="payment_id" jdbcType="INTEGER" property="payment_id" javaType="int"/>
        <result column="payment_type" jdbcType="INTEGER" property="payment_type" javaType="int"/>
        <result column="create_time" jdbcType="BIGINT" property="create_time" javaType="int"/>
        <result column="update_time" jdbcType="BIGINT" property="update_time" javaType="int"/>
    </resultMap>

    <select id="findAll" resultType="com.ruiruisun.stock.entity.OrderPayment">
        select * from `order_payment`
    </select>

    <select id="findOne" resultType="com.ruiruisun.stock.entity.OrderPayment">
        select * from `order_payment` WHERE id = #{id}
    </select>

    <select id="findAllByOrderId" resultType="com.ruiruisun.stock.bean.OrderPaymentBean">
        select op.id, p.name, op.money from `order_payment` op LEFT JOIN `payment` p ON p.id = op.payment_id WHERE order_id = #{order_id} ORDER BY `id` DESC
    </select>

    <select id="findPageByCondition" resultType="com.ruiruisun.stock.bean.OrderPaymentBuyerBean">
        SELECT
        p.name, SUM(op.money) AS money, b.name AS buyer_name, payment_id
        FROM
        `order_payment` op
        LEFT JOIN
        `payment` p
        ON
        p.id = op.payment_id
        LEFT JOIN
        `buyer` b
        ON
        b.id = op.buyer_id
        WHERE
        DATE_FORMAT(FROM_UNIXTIME(op.create_time), '%Y-%m-%d') = #{date}
        <if test="payment_id > 0">
            AND `payment_id` = #{payment_id}
        </if>
        GROUP BY op.buyer_id, payment_id
    </select>

    <insert id="create" parameterType="com.ruiruisun.stock.entity.OrderPayment" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO `order_payment` (`buyer_id`, `user_id`, `order_id`, `money`, `payment_id`, `payment_type`, `create_time`, `update_time`) VALUES (#{buyer_id}, #{user_id}, #{order_id}, #{money}, #{payment_id}, #{payment_type}, unix_timestamp(now()), 0)
    </insert>

    <select id="day" resultType="com.ruiruisun.stock.bean.OrderPaymentDayBean">
        SELECT `payment_id`, SUM(`money`) AS `money` FROM `order_payment` WHERE DATE_FORMAT(FROM_UNIXTIME(create_time), '%Y-%m-%d') = #{date} GROUP BY `payment_id` ORDER BY `money` DESC
    </select>

    <select id="userDay" resultType="com.ruiruisun.stock.bean.OrderPaymentDayBean">
        SELECT `user_id`, `payment_id`, SUM(`money`) AS `money` FROM `order_payment` WHERE DATE_FORMAT(FROM_UNIXTIME(create_time), '%Y-%m-%d') = #{date} GROUP BY `user_id`, `payment_id` ORDER BY `money` DESC
    </select>

    <select id="findBuyerDebt" resultType="com.ruiruisun.stock.bean.BuyerDebtBean">
        SELECT
        b.name, SUM(op.money) AS money, max(op.`create_time`) AS max_create_time
        FROM
        `order_payment` op
        LEFT JOIN
        `payment` p
        ON
        p.id = op.payment_id
        LEFT JOIN
        `buyer` b
        ON
        b.id = op.buyer_id
        WHERE
        p.`name` = '欠款' AND
        b.`name` LIKE CONCAT('%', #{name}, '%')
        GROUP BY op.buyer_id
    </select>
</mapper>